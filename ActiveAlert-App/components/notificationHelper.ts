import * as Notifications from "expo-notifications";
import React, { useEffect } from "react";
import { Platform } from "react-native";

// ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ notification handler
Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: true,
    shouldSetBadge: false,
  }),
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏•‡∏∏‡∏Å‡∏ã‡πâ‡∏≥
export async function scheduleRepeatingAlarmNotification(
  weekday: number,
  time: { hour: number; minute: number },
  duration: number,
  part: String,
) {
  const startNotificationId = await Notifications.scheduleNotificationAsync({
    content: {
      title: "ActiveAlert ‚è∞",
      body: `It's time for ${part} workout!`,
      sound: true,
      priority: Notifications.AndroidNotificationPriority.MAX,
    },
    trigger: {
      weekday,
      hour: time.hour,
      minute: time.minute,
      repeats: true,
    },
  });

  const endTime = new Date();
  endTime.setHours(time.hour, time.minute + duration);
  if (endTime.getMinutes() >= 60) {
    endTime.setHours(endTime.getHours() + Math.floor(endTime.getMinutes() / 60));
    endTime.setMinutes(endTime.getMinutes() % 60);
  }

  const endNotificationId = await Notifications.scheduleNotificationAsync({
    content: {
      title: "Workout Complete üí™",
      body: `Your ${part} workout session is now over!`,
      sound: true,
      priority: Notifications.AndroidNotificationPriority.MAX,
    },
    trigger: {
      weekday,
      hour: endTime.getHours(),
      minute: endTime.getMinutes(),
      repeats: true,
    },
  });

  // ‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô ID ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  return { startNotificationId, endNotificationId };
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏õ‡∏•‡∏∏‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ notificationId
export async function cancelSelectedAlarm(startId: string, endId: string) {
  if (startId) {
    await Notifications.cancelScheduledNotificationAsync(startId);
  }
  if (endId) {
    await Notifications.cancelScheduledNotificationAsync(endId);
  }
}

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏õ‡∏•‡∏∏‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö ID
// async function setNewAlarm() {
//   const { startNotificationId, endNotificationId } =
//     await scheduleRepeatingAlarmNotification(
//       2, // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå
//       { hour: 7, minute: 0 },
//       30, // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 30 ‡∏ô‡∏≤‡∏ó‡∏µ
//       "morning"
//     );

//   // ‡πÄ‡∏Å‡πá‡∏ö startNotificationId ‡πÅ‡∏•‡∏∞ endNotificationId ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
//   saveAlarmInDatabase({
//     startNotificationId,
//     endNotificationId,
//   });
// }

// // ‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏õ‡∏•‡∏∏‡∏Å‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
// async function cancelAlarmFromDatabase(alarmId) {
//   const alarmData = await getAlarmDataFromDatabase(alarmId); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏∏‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° ID ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å

//   if (alarmData) {
//     await cancelSelectedAlarm(
//       alarmData.startNotificationId,
//       alarmData.endNotificationId
//     );

//     // ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
//     deleteAlarmInDatabase(alarmId);
//   }
// }